{"version":3,"sources":["assets/metamask_fox.png","assets/Polka-Dots.svg","components/Widgets/images/clock.png","assets/leo.png","assets/mike.png","assets/joao.jpeg","assets/connect.png","assets/bear.png","assets/waves.gif","assets/ship.gif","components/Widgets/images/Kanye.png","components/Widgets/images/Lebron.png","components/Widgets/images/Rock.png","types/index.ts","types/leaderboardTypes.ts","components/Widgets/CelebrityWidget.tsx","components/Widgets/JokeWidget.tsx","components/Widgets/LeaderboardWidget/getBalance.tsx","components/Widgets/LeaderboardWidget/tokenData.ts","components/Board.tsx","components/Widgets/LeaderboardWidget/Metamask.tsx","components/Widgets/LeaderboardWidget/DataTable.tsx","components/Widgets/LeaderboardWidget/LeaderboardWidget.tsx","components/Widgets/ApiRequests.tsx","components/Widgets/BalancesWidget.tsx","components/Widgets/BearFaucetWidget.tsx","components/Widgets/TransferWidget.tsx","components/Widgets/Widget.tsx","components/AdventureLogo.tsx","components/WidgetButton.tsx","App.tsx","index.tsx"],"names":["module","exports","WidgetTypes","ACTIONS","ItemTypes","tokens","CelebrityWidget","useState","optionValue","setOptionValue","itemIndex","setItemIndex","items","label","value","require","time","setTime","sendAPIRequest","a","window","ethereum","enable","accounts","account","alert","axios","post","ticker","amount","to","hookUrl","then","response","console","log","catch","error","useEffect","setInterval","newTime","newDate","Date","now","getHours","getMinutes","toString","padStart","getFormattedTime","setTimeout","id","className","alt","src","clock","onChange","evt","newValue","target","newItemIndex","findIndex","audio","Audio","JokeWidget","setup","setSetup","punchline","setPunchline","newJoke","useCallback","fetch","res","json","res2","play","onClick","minABI","constant","inputs","name","type","outputs","getBalance","tokenAddress","userAddress","cont","web3","eth","contract","at","Promise","resolve","balanceOf","balance","decimals","decimal","output","div","drawerTypes","tokenData","ginandjuice","address","link","jolene","sonnet","image","useStyles","makeStyles","theme","root","display","flexWrap","width","height","position","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","transform","backgroundSize","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","imageMarked","MetamaskButton","props","classes","connector","Web3","getAccounts","err","length","setAddress","setConnection","ButtonBase","focusRipple","key","focusVisibleClassName","style","process","Typography","component","variant","DataTable","input","useRef","TableContainer","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TextField","margin","e","current","fullWidth","Button","slice","TableBody","Object","keys","map","token","index","href","rel","tokenBalance","LeaderboardWidget","clientAddress","setClientAddress","connection","balances","setBalances","all","entries","data","newBalances","Metamask","aux_web3","ApiRequests","_user","_ticker","params","user","this","api_request","undefined","Error","utils","fromWei","_from","_to","aweb3","isAddress","_amount","toWei","from","transf","sendTransaction","transactionHash","url_end","url","BalancesWidget","setTokens","set_account","mike","leo","joao","images","not_connected","profile","set_profile","ranking","new_tokens","Array","i","get_balance","_balance","push","setRandomProfile","random","Math","floor","event","Tooltip","title","BearFaucetWidget","setAccount","connectMetamask","send_tokens","bear","fox","waves","TransferWidget","setTo","setweb3","ship","transfer","Widget","useDrag","item","collect","monitor","isDragging","drag","ref","renderWidget","joke","leaderboard","celebrity","bear_faucet","bear_transfer","WidgetTime","getSeconds","getMilliseconds","adventureText","AdventureLogo","widget","WidgetButton","flexDirection","marginRight","IconButton","Widgets","Board","isDrawerOpen","setIsDrawerOpen","drawerType","setDrawerType","widgets","setWidgets","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","round","x","y","update","$merge","moveWidget","minHeight","values","Drawer","anchor","open","onClose","minWidth","newWidgetId","uuidv4","newWidgets","renderDrawerContent","App","background","backgroundImage","exact","path","options","HTML5toTouch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39087cf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metamask_fox.cde19f66.png\";","module.exports = __webpack_public_path__ + \"static/media/Polka-Dots.72456503.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.116ab4b1.png\";","module.exports = __webpack_public_path__ + \"static/media/leo.94788b8c.png\";","module.exports = __webpack_public_path__ + \"static/media/mike.ddc5f06c.png\";","module.exports = __webpack_public_path__ + \"static/media/joao.7037e9df.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/connect.79c70a85.png\";","module.exports = __webpack_public_path__ + \"static/media/bear.e2b4363f.png\";","module.exports = __webpack_public_path__ + \"static/media/waves.205809bc.gif\";","module.exports = __webpack_public_path__ + \"static/media/ship.0b68c538.gif\";","module.exports = __webpack_public_path__ + \"static/media/Kanye.ce4d6243.png\";","module.exports = __webpack_public_path__ + \"static/media/Lebron.00f1fde3.png\";","module.exports = __webpack_public_path__ + \"static/media/Rock.625afa09.png\";","export enum WidgetTypes {\n  time = \"time\",\n  joke = \"joke\",\n  leaderboard = \"leaderboard\",\n  celebrity = \"celebrity\",\n  balances = \"balances\",\n  bear_faucet = \"bear_faucet\",\n  bear_transfer = \"bear_transfer\",\n  //   audio_player = \"audio_player\",\n}\n\nexport const ItemTypes = {\n  BOX: \"BOX\",\n  TRACK: \"TRACK\",\n  WIDGET: \"WIDGET\",\n};\n\nexport interface DragItem {\n  type: string;\n  id: string;\n  top: number;\n  left: number;\n}\n\nexport enum ACTIONS {\n  dragAndDropFile = \"drag and drop file\",\n  selectFromFolder = \"select from folder\",\n  //   selectFromLibrary = \"select from library\",\n}\n","interface data {\n  ticker: string;\n  address: string;\n  link: string;\n  balance: string;\n}\n\nexport enum tokens {\n  ginandjuice,\n  jolene,\n  sonnet,\n}\n\nexport type tokenDataObj = {\n  [token: number]: data;\n};\n\nexport type dataTableProps = {\n  address: string;\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\n  tokenBalance: string[];\n};\n\nexport type metamaskProps = {\n  setAddress: React.Dispatch<React.SetStateAction<string>>;\n  setConnection: React.Dispatch<React.SetStateAction<boolean>>;\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport clock from \"./images/clock.png\";\ndeclare const window: any;\n//Celebrity Widget\n//Celebrity Image\nexport const CelebrityWidget = () => {\n  //Image states\n  const [optionValue, setOptionValue] = useState(\"kanye\");\n  const [itemIndex, setItemIndex] = useState(0);\n  const items = [\n    { label: \"kanye\", value: require(\"./images/Kanye.png\") },\n    { label: \"lebron\", value: require(\"./images/Lebron.png\") },\n    { label: \"the rock\", value: require(\"./images/Rock.png\") },\n  ];\n  //Time state\n  const [time, setTime] = useState(\"\");\n  //Image functions\n  const handleChange = (evt: { target: { value: any } }) => {\n    const newValue = evt.target.value;\n    setOptionValue(newValue);\n    const newItemIndex = items.findIndex((items) => items.label === newValue);\n    setItemIndex(newItemIndex);\n  };\n  //Time functions\n  const getFormattedTime = () => {\n    const newDate = new Date(Date.now());\n\n    return `${newDate.getHours()}:\n    ${newDate.getMinutes().toString().padStart(2, \"0\")}`;\n  };\n  //Token functions\n  const sendAPIRequest = async () => {\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    window.alert(\"A Gift For You\\n\\n1 RAWR Token\");\n    var apiAddress;\n    apiAddress = \"https://adventure-eth-api.herokuapp.com/transfer-token\";\n    axios\n      .post(apiAddress, {\n        ticker: \"BEAR\",\n        amount: 1,\n        to: account,\n        hookUrl: \"done\",\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    setInterval(() => {\n      const newTime = getFormattedTime();\n      setTime(newTime);\n    }, 1000);\n    setTimeout(sendAPIRequest, 60000);\n  }, []);\n  return (\n    <div id=\"celebrity\" className=\"default\">\n      <header>\n        <img alt=\"clock\" className=\"clock\" src={clock} />\n        <h1>{items[itemIndex].label} time</h1>\n        <div className=\"dropdown\">\n          <select\n            className=\"dropbutton\"\n            value={optionValue}\n            onChange={handleChange}\n          >\n            <option value=\"kanye\">Kanye</option>\n            <option value=\"lebron\">Lebron</option>\n            <option value=\"the rock\">The Rock</option>\n          </select>\n        </div>\n      </header>\n      <main>\n        <img alt=\"celebrity\" className=\"image\" src={items[itemIndex].value} />\n        <div className=\"time\">\n          The time is <div>{time}</div>\n        </div>\n        <div></div>\n      </main>\n    </div>\n  );\n};\n","//Joke Widget\nimport React, { useEffect, useState, useCallback } from \"react\";\n\nconst audio = new Audio(\n  \"http://static1.grsites.com/archive/sounds/comic/comic002.mp3\"\n);\n\nexport const JokeWidget = () => {\n  const [setup, setSetup] = useState(\"loading\");\n  const [punchline, setPunchline] = useState(\"loading\");\n\n  const newJoke = useCallback(() => {\n    fetch(\"https://official-joke-api.appspot.com/random_joke\")\n      .then((res) => res.json())\n      .then((res2) => {\n        setSetup(res2.setup);\n        setPunchline(res2.punchline);\n      });\n    audio.play();\n  }, []);\n\n  useEffect(() => {\n    newJoke();\n  }, [newJoke]);\n\n  return (\n    <div className=\"default\">\n      <div className=\"joke-container\">\n        <h3 className=\"title\">Press The Button To Get A Random Joke!</h3>\n        <button className=\"getJoke\" onClick={newJoke}>\n          Tell Me Something Funny!\n        </button>\n      </div>\n      <div className=\"Joke\">\n        Setup: {setup} <br />\n        Punchline: {punchline} <br />\n      </div>\n    </div>\n  );\n};\n","declare let web3: any;\n\nlet minABI = [\n  // balanceOf\n  {\n    constant: true,\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ name: \"balance\", type: \"uint256\" }],\n    type: \"function\",\n  },\n  // decimals\n  {\n    name: \"decimals\",\n    constant: true,\n    inputs: [],\n    outputs: [{ name: \"\", type: \"uint8\" }],\n    type: \"function\",\n  },\n];\n\nconst getBalance = (\n  tokenAddress: string,\n  userAddress: string\n): Promise<string> => {\n  let contract = web3.eth.contract(minABI);\n  let cont = contract.at(tokenAddress);\n  return new Promise<string>((resolve) => {\n    cont.balanceOf(userAddress, (error: object, balance: any) => {\n      // Get decimals\n      cont.decimals((error: object, decimal: number) => {\n        // calculate a balance\n        balance = balance.div(10 ** decimal);\n        let output: string = balance.toString();\n        // console.log(balance);\n        resolve(output);\n      });\n    });\n  });\n};\n\nexport default getBalance;\n","import { tokenDataObj, tokens } from \"../../../types/leaderboardTypes\";\n\nlet tokenData: tokenDataObj = {\n  [tokens.ginandjuice]: {\n    ticker: \"Gin & Juice\",\n    address: \"0x4c10c76b6e04A8B2F6be2d9C39119C34907Be07F\",\n    link: \"http://52.53.173.93/\",\n    balance: \"0\",\n  },\n  [tokens.jolene]: {\n    ticker: \"Jolene\",\n    address: \"0x68415b7D02f0215ec33C4EF838eC055609A2E45a\",\n    link: \"http://54.177.174.215/\",\n    balance: \"0\",\n  },\n  [tokens.sonnet]: {\n    ticker: \"Sonnet18\",\n    address: \"0xe1e05a4627fC5015d4374e05454Fd2159760fCf3\",\n    link: \"http://13.57.47.139/\",\n    balance: \"0\",\n  },\n};\n\nexport default tokenData;\n","import { Button, Drawer } from \"@material-ui/core\";\nimport { DragItem, ItemTypes, WidgetTypes } from \"../types\";\nimport { IWidgetProps, Widget } from \"./Widgets/Widget\";\nimport React, { useEffect, useState } from \"react\";\nimport { XYCoord, useDrop } from \"react-dnd\";\n\nimport { AdventureLogo } from \"./AdventureLogo\";\nimport { WidgetButton } from \"./WidgetButton\";\nimport update from \"immutability-helper\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nenum drawerTypes {\n  widgets = \"widgets\",\n}\n\nexport const Board: React.FC = () => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [drawerType, setDrawerType] = useState<drawerTypes | null>(null);\n  const [widgets, setWidgets] = useState<{ [key: string]: IWidgetProps }>({});\n\n  useEffect(() => {\n    setIsDrawerOpen(!!drawerType);\n  }, [drawerType]);\n\n  const moveWidget = (id: string, left: number, top: number) => {\n    setWidgets(\n      update(widgets, {\n        [id]: {\n          $merge: { left, top },\n        },\n      })\n    );\n  };\n\n  const onClickWidgetItem = (type: WidgetTypes) => () => {\n    const newWidgetId = uuidv4();\n\n    const newWidgets: {\n      [key: string]: IWidgetProps;\n    } = {\n      [newWidgetId]: {\n        id: newWidgetId,\n        type,\n        top: 0,\n        left: 0,\n      },\n    };\n\n    setWidgets(update(widgets, { $merge: newWidgets }));\n  };\n\n  const renderDrawerContent = () => {\n    if (drawerType === drawerTypes.widgets) {\n      return (\n        <>\n          {Object.values(WidgetTypes).map((widget) => (\n            <div\n              key={widget}\n              className=\"library-item\"\n              onClick={onClickWidgetItem(widget)}\n            >\n              {widget}\n            </div>\n          ))}\n        </>\n      );\n    }\n  };\n\n  const [, drop] = useDrop({\n    accept: [ItemTypes.WIDGET],\n    drop(item: DragItem, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      if (!delta) return;\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n\n      if (item.type === ItemTypes.WIDGET) {\n        moveWidget(item.id, left, top);\n      }\n\n      return undefined;\n    },\n  });\n\n  return (\n    <div\n      ref={drop}\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        minHeight: \"100vh\",\n        position: \"relative\",\n        flexDirection: \"column\",\n      }}\n    >\n      <AdventureLogo\n        widget={\n          <WidgetButton onClick={() => setDrawerType(drawerTypes.widgets)} />\n        }\n      />\n\n      {Object.values(widgets).map((widget, index) => {\n        return <Widget key={widget.id} {...widget} />;\n      })}\n\n      <Drawer\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={isDrawerOpen}\n        onClose={() => setDrawerType(null)}\n      >\n        <div style={{ width: 400, padding: 10 }}>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              style={{\n                minWidth: 20,\n                color: \"red\",\n              }}\n              variant=\"contained\"\n              onClick={() => setDrawerType(null)}\n            >\n              x\n            </Button>\n          </div>\n          {renderDrawerContent()}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { metamaskProps } from \"../../../types/leaderboardTypes\";\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../../css/Widget.css\";\ndeclare let web3: any;\ndeclare let ethereum: any;\ndeclare let Web3: any;\n\nconst image = {\n  title: \"Connect Metamask\",\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    // minWidth: 5500,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  image: {\n    position: \"relative\",\n    height: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100% !important\", // Overrides inline-style\n      height: 100,\n    },\n    \"&:hover, &$focusVisible\": {\n      zIndex: 1,\n      \"& $imageBackdrop\": {\n        opacity: 0.15,\n      },\n      \"& $imageMarked\": {\n        opacity: 0,\n      },\n      \"& $imageTitle\": {\n        border: \"4px solid currentColor\",\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    bottom: 0,\n    backgroundSize: \"cover\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  imageBackdrop: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create(\"opacity\"),\n  },\n  imageTitle: {\n    position: \"relative\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n      theme.spacing(1) + 6\n    }px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: \"absolute\",\n    bottom: -2,\n    left: \"calc(50% - 9px)\",\n    transition: theme.transitions.create(\"opacity\"),\n  },\n}));\n\nconst MetamaskButton = (props: metamaskProps) => {\n  const classes = useStyles();\n\n  const connector = async () => {\n    try {\n      if (ethereum) {\n        web3 = new Web3(ethereum);\n        try {\n          await ethereum.enable();\n          web3.eth.getAccounts((err: string, accounts: string[]) => {\n            if (err) console.log(err);\n            else if (!accounts.length) alert(\"No Metamask accounts found\");\n            else {\n              props.setAddress(accounts[0]);\n              props.setConnection(true);\n            }\n          });\n        } catch (e) {\n          console.error(\"Error, \", e);\n        }\n      }\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ButtonBase\n        focusRipple\n        key={image.title}\n        className={classes.image}\n        focusVisibleClassName={classes.focusVisible}\n        style={{\n          width: image.width,\n          height: image.height,\n        }}\n        onClick={connector}\n      >\n        <img\n          alt={image.title}\n          className={classes.imageSrc}\n          src={process.env.PUBLIC_URL + \"/metamask-logo.gif\"}\n        />\n        <span className={classes.imageBackdrop} />\n        <span className={classes.imageButton}>\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"inherit\"\n            className={classes.imageTitle}\n          >\n            {image.title}\n            <span className={classes.imageMarked} />\n          </Typography>\n        </span>\n      </ButtonBase>\n    </div>\n  );\n};\n\nexport default MetamaskButton;\n","import React, { useRef } from \"react\";\nimport { dataTableProps } from \"../../../types/leaderboardTypes\";\nimport tokenData from \"./tokenData\";\nimport {\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableContainer,\n  TableHead,\n  Paper,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport \"../../css/Widget.css\";\n\nconst DataTable = (props: dataTableProps) => {\n  const input = useRef<string>(\"\");\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        size=\"small\"\n        aria-label=\"a dense table\"\n        className=\"leaderboard-table\"\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" variant=\"body\" size=\"small\">\n              <TextField\n                id=\"address\"\n                color=\"primary\"\n                label=\"address\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                onChange={(e) => (input.current = e.target.value)}\n                fullWidth\n              />\n            </TableCell>\n            <TableCell align=\"center\" variant=\"body\" size=\"small\">\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => {\n                  props.setAddress(input.current);\n                }}\n              >\n                Retrieve\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <strong>\n                Adventure Tokens for {props.address.slice(0, 18)}...\n              </strong>\n            </TableCell>\n            <TableCell align=\"center\">\n              <strong>Bag</strong>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.keys(tokenData).map((token, index: number) => (\n            <TableRow key={tokenData[index].ticker}>\n              <TableCell align=\"left\">\n                <a\n                  href={tokenData[index].link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {tokenData[index].ticker}\n                </a>\n              </TableCell>\n              <TableCell align=\"center\">\n                {props.tokenBalance[index] || \"0\"}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n","import React, { useEffect, useState } from \"react\";\nimport getBalance from \"./getBalance\";\nimport tokenData from \"./tokenData\";\nimport MetamaskButton from \"./Metamask\";\nimport DataTable from \"./DataTable\";\nimport \"../../css/Widget.css\";\n\nconst LeaderboardWidget = () => {\n  const [clientAddress, setClientAddress] = useState<string>(\"\");\n  const [connection, setConnection] = useState<boolean>(false);\n  const [balances, setBalances] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!connection || !clientAddress) return;\n    (async () => {\n      // Returns list of balances\n      let newBalances = await Promise.all(\n        Object.entries(tokenData).map(async ([, data]) => {\n          return await getBalance(data.address, clientAddress);\n        })\n      );\n      // Set new balance\n      setBalances(newBalances);\n    })();\n  }, [connection, clientAddress]);\n\n  return (\n    <div className=\"leaderboard-container\">\n      {connection ? (\n        <DataTable\n          address={clientAddress}\n          tokenBalance={balances}\n          setAddress={setClientAddress}\n        />\n      ) : (\n        <MetamaskButton\n          setAddress={setClientAddress}\n          setConnection={setConnection}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LeaderboardWidget;\n","import axios from 'axios';\n\nconst aux_web3 = require(\"web3\");\n\n\ndeclare let web3: any\ndeclare let ethereum: any\ndeclare let Web3: any\n\n export class ApiRequests {\n\n\n    static async get_balance( _user: string , _ticker: string) {\n        const params = {\n                      user: _user, \n                      ticker: _ticker\n                      };\n      \n          const url =\"balance\";\n\n      \n          try {\n              var balance : any = (await this.api_request(url,params));\n              if (balance === undefined ) throw new Error(\"error api\");\n              else {\n                return aux_web3.utils.fromWei(balance.toString(),\"ether\");\n              }\n      \n          }\n          catch(err) {\n              console.log(err+\"can't get balance\");\n              return \"error\";\n          }\n      }\n\n        \n    static async transfer(_from:string,_to:string,amount:string,ticker:string,aweb3:any) {\n        \n        try {\n          if (aux_web3.utils.isAddress(_from) && aux_web3.utils.isAddress(_to)) {\n            let _amount = aux_web3.utils.toWei(amount,\"ether\");\n            const params = {from: _from, to: _to, amount: _amount, ticker: ticker};\n    \n            try {\n              var transf : any = (await this.api_request(\"transfer\",params));\n    \n              if (!transf ) throw new Error(\"error api\");\n              else {\n                  await aweb3.eth.sendTransaction(transf, function(err:any, transactionHash:any) {\n                    if (!err)\n                      window.alert(\"transaction: \" + transactionHash); \n                  });\n                  }\n    \n              }  \n            catch(err) {\n              console.log(err+\"transfer failed\");\n            }\n          \n        }\n      }\n        catch (e) {\n          console.log('error ', e);\n        }\n      }\n    \n      \n      \n      static async api_request(url_end: string, params: object) {\n        var url = 'https://myserverpool.herokuapp.com/'+url_end;\n        var res;\n        await axios.post(url,params)\n                .then(function (response) {\n                    res = response.data;\n                })\n                .catch(function (error) {\n                  res = undefined;\n                });\n        \n        return res;\n      }\n    \n}\n\n\n","import \"../css/Widget.css\";\nimport \"../css/BalancesWidget.css\";\n\nimport React, {useState } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport {ApiRequests} from \"./ApiRequests\";\nimport { JsonToTable } from \"react-json-to-table\";\n\nimport leo from \"../../assets/leo.png\"\nimport mike from \"../../assets/mike.png\"\nimport joao from \"../../assets/joao.jpeg\"\nimport not_connected from \"../../assets/connect.png\"\n\nconst web3 = require(\"web3\");\n\n\n\n\nexport const BalancesWidget = () => {\n\n\n    //add new tokens here (and then in the api)\n    const [tokens,setTokens] = useState([\n                                        {ticker: \"BEAR\", amount: \"0\"}, \n                                        {ticker: \"GRATITUDE\" , amount: \"0\"}\n                                        ]);\n\n    const [account, set_account] = useState(\"\");\n\n    const [images] = useState([mike, leo, joao]);\n\n    const [profile,set_profile] = useState(not_connected);                                \n    \n    \n\n\n    const live_update = () => {\n      setRandomProfile();\n      setInterval (async function () {await ranking()},5000);\n    }\n\n    async function ranking() {\n\n\n        if (web3.utils.isAddress(account)) {\n          \n          let new_tokens : {ticker : string, amount : string}[] = new Array(0);\n\n          for (let i = 0; i < tokens.length ; i++) {\n\n            let _balance : string = await ApiRequests.get_balance(account,tokens[i].ticker);\n\n            var token : {ticker : string, amount : string} = {ticker : tokens[i].ticker, amount : _balance }\n            new_tokens.push(token);\n          }\n          setTokens(new_tokens);\n        }       \n    }\n\n\n    const handleChange = (event:any) => {\n      set_account(event.target.value.toString());\n    }\n\n    const setRandomProfile = () => {\n      const random = Math.floor(Math.random() * 3);\n      set_profile(images[random]);\n    }\n\n\n      return <div className='balances-container'>\n                <div className='header_balances'>\n                  enter account:\n                <label className=\"text_box_balances\">\n                    <input type=\"text\" name=\"account\" value={account} onChange={handleChange}/>\n                </label>\n                <button className=\"check_button\" onClick={live_update} >check </button>\n                <img src={profile} className=\"profile_image\" alt=\"random profile pic\"></img>\n                <div className=\"table\">\n                  <JsonToTable json={tokens} />\n                </div>\n                \n                </div>\n                <Tooltip title=\"version 0.1, production: joão, leo, mike\">\n                <div className='credits_balances' >credits</div>\n                </Tooltip>\n                </div>\n}\n\n\n","import \"../css/BearFaucetWidget.css\";\n\nimport React, { useState } from \"react\";\n\nimport { Tooltip } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport bear from \"../../assets/bear.png\";\nimport fox from \"../../assets/metamask_fox.png\";\nimport waves from \"../../assets/waves.gif\";\n\ndeclare let web3: any;\ndeclare let ethereum: any;\ndeclare let Web3: any;\n\nexport const BearFaucetWidget = () => {\n  const [account, setAccount] = useState(\"\");\n  // let account: string = \"\";\n\n  const connectMetamask = async () => {\n    try {\n      if (ethereum) {\n        console.log(\"ETH IS \", ethereum);\n        web3 = new Web3(ethereum);\n        try {\n          await ethereum.enable();\n\n          web3.eth.getAccounts((err: string, accounts: string[]) => {\n            if (err) console.log(err);\n            else if (!accounts.length) alert(\"No Metamask accounts found\");\n            else {\n              // account = accounts[0];\n              setAccount(accounts[0]);\n            }\n          });\n        } catch (e) {\n          console.error(\"Error, \", e);\n        }\n      }\n    } catch (e) {\n      console.log(\"error \", e);\n    }\n  };\n\n  const send_tokens = async () => {\n    if (account !== \"\") {\n      const apiAddress =\n        \"https://adventure-eth-api.herokuapp.com/transfer-token\";\n      axios\n        .post(apiAddress, {\n          ticker: \"BEAR\",\n          amount: 100,\n          to: account,\n          hookUrl: \"done\",\n        })\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else window.alert(\"Connect with metamask first!\");\n  };\n\n  return (\n    <div className=\"faucet-container\">\n      <div className=\"header_faucet\">\n        <img\n          className=\"topleft_faucet\"\n          src={bear}\n          style={{ width: \"30px\", height: \"30px\" }}\n          alt=\"bear\"\n        ></img>\n        <img\n          className=\"topright_faucet\"\n          onClick={connectMetamask}\n          src={fox}\n          style={{ width: \"30px\", height: \"30px\" }}\n          alt=\"fox\"\n        ></img>\n        <h1> 100 rawr tokens </h1>\n        <img\n          className=\"gif_faucet\"\n          src={waves}\n          style={{ width: \"150px\", height: \"150px\" }}\n          alt=\"gif\"\n        ></img>\n        <button className=\"button_faucet\" onClick={send_tokens}>\n          request rawr tokens\n        </button>\n        <Tooltip title=\"version 0.1, production: joão, leo, mike\">\n          <div className=\"credits\">credits</div>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n","\nimport \"../css/TransferWidget.css\";\nimport React, { useState } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport {ApiRequests} from \"./ApiRequests\";\nimport fox from \"../../assets/metamask_fox.png\"\nimport ship from \"../../assets/ship.gif\"\ndeclare let web3: any\ndeclare let ethereum: any\ndeclare let Web3: any\n\n\nexport const TransferWidget = () => {\n\n    let [account,setAccount] = useState(\"not connected\");\n  \n    let [to,setTo] = useState(\"\");\n  \n    let [aweb3,setweb3] : any = useState(\"\");\n  \n  \n  \n  \n    const connectMetamask = async () => {\n        try {\n    \n          if (ethereum) {\n    \n            console.log('ETH IS ', ethereum)\n            web3 = new Web3(ethereum)\n            try {\n              await ethereum.enable()\n    \n              web3.eth.getAccounts((err: string, accounts: string[]) => {\n                if (err) return err;\n                else if (!accounts.length) {alert('No Metamask accounts found'); return \"error\";}\n                else {\n                    setAccount(accounts[0]);\n                    setweb3(web3);\n                    \n                }\n              })\n            } catch (e) {\n              console.error('Error, ', e)\n              return \"error\";\n            }\n          }\n        } catch (e) {\n          console.log('error ', e)\n          return \"error\";\n        }\n      }\n\n\n    const make_transfer = () => {\n        ApiRequests.transfer(account,to,\"10\",\"BEAR\",aweb3);\n    }\n  \n\n    const handleChange = (event:any) => {\n      setTo(event.target.value);\n    }\n  \n  \n      return <div className='transfer-container'>\n      \n      <div className='header_transfer'>\n  \n      <img className=\"topright_transfer\" onClick={connectMetamask} src={fox} style={{width: '30px', height: '30px'}} alt=\"fox\"></img>\n      <h1> token shipper </h1>\n      <p>connected with: {account}</p>\n      <img className=\"gif_transfer\" src={ship} style={{width: '150px', height: '150px'}} alt=\"ship\"></img>\n      <label className=\"text_box-transfer\">\n      <input type=\"text\" name=\"to\" value={to} onChange={handleChange}/>\n    </label>\n      <button className=\"button_transfer\" onClick={make_transfer} >transfer 10 rawr tokens</button>\n      <Tooltip title=\"version 0.1, production: joão, leo, mike\">\n      <div className='credits_transfer' >credits</div>\n      </Tooltip>\n      \n    </div>\n    </div>\n  \n  }","import \"../css/Widget.css\";\n\nimport { ItemTypes, WidgetTypes } from \"../../types\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { CelebrityWidget } from \"./CelebrityWidget\";\nimport { JokeWidget } from \"./JokeWidget\";\nimport LeaderboardWidget from \"./LeaderboardWidget/LeaderboardWidget\";\nimport { useDrag } from \"react-dnd\";\nimport { BalancesWidget } from \"./BalancesWidget\";\nimport { BearFaucetWidget } from \"./BearFaucetWidget\";\nimport { TransferWidget } from \"./TransferWidget\";\n//import { AudioPlayerWidget } from \"./AudioPlayerWidget\";\n\nexport interface IWidgetProps {\n  type: WidgetTypes;\n  top: number;\n  left: number;\n  id: string;\n}\n\nexport const Widget = (props: IWidgetProps) => {\n  const { top, left, id, type } = props;\n\n  const [, drag] = useDrag({\n    item: { id, left, top, type: ItemTypes.WIDGET },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      ref={drag}\n      className=\"widget-container\"\n      style={{\n        left,\n        top,\n      }}\n    >\n      {renderWidget(type)}\n    </div>\n  );\n};\n\nconst renderWidget = (type: WidgetTypes) => {\n  switch (type) {\n    case WidgetTypes.time:\n      return <WidgetTime />;\n    case WidgetTypes.joke:\n      return <JokeWidget />;\n    case WidgetTypes.leaderboard:\n      return <LeaderboardWidget />;\n    case WidgetTypes.celebrity:\n      return <CelebrityWidget />;\n    case WidgetTypes.balances:\n      return <BalancesWidget />\n    case WidgetTypes.bear_faucet:\n      return <BearFaucetWidget />\n    case WidgetTypes.bear_transfer:\n      return <TransferWidget />\n    /*case WidgetTypes.audio_player:\n      return <AudioPlayerWidget />*/\n    // add widget case here for new widget types\n    default:\n      return null;\n  }\n};\n\n// example widget\n\nconst WidgetTime = () => {\n  const [time, setTime] = useState(\"\");\n\n  useEffect(() => {\n    setInterval(() => {\n      const newTime = getFormattedTime();\n      setTime(newTime);\n    }, 100);\n  }, []);\n\n  return (\n    <div>\n      The time is <div>{time}</div>\n    </div>\n  );\n};\n\nconst getFormattedTime = (): string => {\n  const newDate = new Date(Date.now());\n\n  return `${newDate.getHours()}:${newDate\n    .getMinutes()\n    .toString()\n    .padStart(2, \"0\")}:${newDate\n    .getSeconds()\n\n    .toString()\n    .padStart(2, \"0\")}:${newDate\n    .getMilliseconds()\n\n    .toString()\n    .padStart(2, \"0\")}`;\n};\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\n\nconst adventureText = `version ${process.env.REACT_APP_VERSION}`;\n\ninterface IAdventureLogo {\n  widget?: JSX.Element;\n}\n\nexport const AdventureLogo = ({ widget }: IAdventureLogo) => (\n  <div\n    style={{\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-start\",\n    }}\n  >\n    <Tooltip title={adventureText}>\n      <div className=\"adventure-logo\">\n        adventure\n        <br />\n        corporation\n      </div>\n    </Tooltip>\n\n    {widget}\n  </div>\n);\n","import React from \"react\";\n\nimport { IconButton } from \"@material-ui/core\";\nimport { Widgets as WidgetsIcon } from \"@material-ui/icons\";\n\ninterface IWidgetButtonProps {\n  onClick: () => void;\n}\n\nexport const WidgetButton = ({ onClick }: IWidgetButtonProps) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginRight: 10,\n    }}\n  >\n    <IconButton onClick={onClick}>\n      <WidgetsIcon style={{ height: 40, width: 40 }} />\n    </IconButton>\n    widgets\n  </div>\n);\n","import backgroundImage from \"./assets/Polka-Dots.svg\";\nimport React from \"react\";\nimport {\n  Redirect,\n  Route,\n  HashRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport \"./css/App.css\";\nimport { DndProvider } from \"react-dnd-multi-backend\";\nimport HTML5toTouch from \"react-dnd-multi-backend/dist/esm/HTML5toTouch\";\nimport { Board } from \"./components/Board\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{\n        background: `url(${backgroundImage})`,\n      }}\n    >\n      <Router>\n        <Switch>\n          <Route exact path={\"/\"}>\n            <DndProvider options={HTML5toTouch}>\n              <Board />\n            </DndProvider>\n          </Route>\n          <Redirect from=\"*\" to={\"/\"} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}